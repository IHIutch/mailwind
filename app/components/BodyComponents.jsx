const BodyComponents = {
  Accordion: 'Accordion',
  AccordionElement: 'AccordionElement',
  AccordionTitle: 'AccordionTitle',
  AccordionText: 'AccordionText',
  Button: 'Button',
  Column: 'Column',
  Divider: 'Divider',
  Group: 'Group',
  Hero: 'Hero',
  Image: 'Image',
  Navbar: 'Navbar',
  Raw: 'Raw',
  Section: 'Section',
  Social: 'Social',
  Spacer: 'Spacer',
  Table: 'Table',
  Text: 'Text',
  Wrapper: 'Wrapper',
}

export const MjButton = {
  title: 'Button',
  tagName: 'mj-button',
  description: 'Displays a customizable button.',
  isEndingTag: true,
  allowedChildren: [],
  attributes: [
    {
      name: 'align',
      type: 'string',
      description: 'horizontal alignment',
      defaultValue: 'center',
    },
    {
      name: 'background-color',
      unit: 'color',
      description: 'button background-color',
      defaultValue: '#414141',
    },
    {
      name: 'border',
      type: 'number',
      unit: 'px',
      description: 'css border format',
      defaultValue: 'none',
    },
    {
      name: 'border-bottom',
      type: 'number',
      unit: 'px',
      description: 'css border format',
      defaultValue: null,
    },
    {
      name: 'border-left',
      type: 'number',
      unit: 'px',
      description: 'css border format',
      defaultValue: null,
    },
    {
      name: 'border-radius',
      type: 'number',
      unit: 'px',
      description: 'border radius',
      defaultValue: '3px',
    },
    {
      name: 'border-right',
      type: 'number',
      unit: 'px',
      description: 'css border format',
      defaultValue: null,
    },
    {
      name: 'border-top',
      type: 'number',
      unit: 'px',
      description: 'css border format',
      defaultValue: null,
    },
    {
      name: 'color',
      unit: 'color',
      description: 'text color',
      defaultValue: '#ffffff',
    },
    {
      name: 'container-background-color',
      unit: 'color',
      description: 'button container background color',
      defaultValue: null,
    },
    {
      name: 'css-class',
      type: 'string',
      description: 'class name, added to the root HTML element created',
      defaultValue: null,
    },
    {
      name: 'font-family',
      type: 'string',
      description: 'font name',
      defaultValue: 'Ubuntu, Helvetica, Arial, sans-serif',
    },
    {
      name: 'font-size',
      unit: 'px',
      description: 'text size',
      defaultValue: '13px',
    },
    {
      name: 'font-style',
      type: 'string',
      description: 'normal/italic/oblique',
      defaultValue: null,
    },
    {
      name: 'font-weight',
      unit: 'string',
      description: 'text thickness',
      defaultValue: 'normal',
    },
    {
      name: 'height',
      type: 'number/string',
      unit: 'px',
      description: 'button height',
      defaultValue: null,
    },
    {
      name: 'href',
      unit: 'link',
      description: 'link to be triggered when the button is clicked',
      defaultValue: null,
    },
    {
      name: 'inner-padding',
      type: 'number',
      unit: 'px',
      description: 'inner button padding',
      defaultValue: '10px 25px',
    },
    {
      name: 'letter-spacing',
      type: 'number',
      unit: 'px/em',
      description: 'letter-spacing',
      defaultValue: null,
    },
    {
      name: 'line-height',
      unit: 'px/%',
      description: 'line-height on link',
      defaultValue: '120%',
    },
    // {
    //   name: 'padding',
    //   type: 'number',
    //   unit: 'px',
    //   description: 'supports up to 4 parameters',
    //   defaultValue: '10px 25px',
    // },
    {
      name: 'padding-bottom',
      type: 'number',
      unit: 'px',
      description: 'bottom offset',
      defaultValue: 0,
    },
    {
      name: 'padding-left',
      type: 'number',
      unit: 'px',
      description: 'left offset',
      defaultValue: 0,
    },
    {
      name: 'padding-right',
      type: 'number',
      unit: 'px',
      description: 'right offset',
      defaultValue: 0,
    },
    {
      name: 'padding-top',
      type: 'number',
      unit: 'px',
      description: 'top offset',
      defaultValue: 0,
    },
    {
      name: 'rel',
      type: 'string',
      description: 'specify the rel attribute for the button link',
      defaultValue: null,
    },
    {
      name: 'target',
      type: 'string',
      description: 'specify the target attribute for the button link',
      defaultValue: '_blank',
    },
    {
      name: 'text-align',
      type: 'string',
      description: 'text-align button content',
      defaultValue: 'none',
    },
    {
      name: 'text-decoration',
      type: 'string',
      description: 'underline/overline/none',
      defaultValue: 'none',
    },
    {
      name: 'text-transform',
      type: 'string',
      description: 'capitalize/uppercase/lowercase',
      defaultValue: 'none',
    },
    {
      name: 'title',
      type: 'string',
      description: 'tooltip & accessibility',
      defaultValue: null,
    },
    {
      name: 'vertical-align',
      type: 'string',
      description: 'vertical alignment',
      defaultValue: 'middle',
    },
    {
      name: 'width',
      type: 'number/string',
      unit: 'px',
      description: 'button width',
      defaultValue: null,
    },
  ],
}

export const MjColumn = {
  title: 'Column',
  tagName: 'mj-column',
  attributes: [],
  description: 'Displays a customizable column.',
  isEndingTag: false,
  allowedChildren: [
    // MjText,
    // MjImage,
    MjButton,
  ],
}

export const MjSection = {
  title: 'Section',
  tagName: 'mj-wrapper',
  attributes: [],
  isEndingTag: false,
  allowedChildren: [MjColumn],
}

export const MjWrapper = {
  title: 'Wrapper',
  tagName: 'mj-wrapper',
  attributes: [],
  isEndingTag: false,
  allowedChildren: [MjSection],
}
