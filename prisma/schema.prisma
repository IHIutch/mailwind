// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_CONNECTION_STRING")
}

model User {
  id          String       @id @db.Uuid
  createdAt   DateTime     @default(now()) @db.Timestamptz()
  updatedAt   DateTime     @default(now()) @updatedAt @db.Timestamptz()
  deletedAt   DateTime?    @db.Timestamptz()
  role        GlobalRole
  memberships Membership[]
}

model Block {
  id         Int       @id @default(autoincrement())
  type       BlockType
  templateId Int
  position   String    @db.VarChar
  attributes Json?     @db.Json
  value      String?   @db.VarChar
  createdAt  DateTime  @default(now()) @db.Timestamptz()
  updatedAt  DateTime  @default(now()) @updatedAt @db.Timestamptz()
  deletedAt  DateTime? @db.Timestamptz()
  Template   Template? @relation(fields: [templateId], references: [id])
}

model Template {
  id           Int         @id @default(autoincrement())
  createdAt    DateTime    @default(now()) @db.Timestamptz()
  updatedAt    DateTime    @default(now()) @updatedAt @db.Timestamptz()
  deletedAt    DateTime?   @db.Timestamptz()
  title        String?     @db.VarChar
  blocks       Block[]
  Membership   Membership? @relation(fields: [membershipId], references: [id])
  membershipId Int?
}

model Membership {
  id             Int            @id @default(autoincrement())
  role           MembershipRole
  organizationId Int
  userId         String         @db.Uuid
  createdAt      DateTime       @default(now()) @db.Timestamptz()
  updatedAt      DateTime       @default(now()) @updatedAt @db.Timestamptz()
  deletedAt      DateTime?      @db.Timestamptz()
  User           User           @relation(fields: [userId], references: [id])
  Organization   Organization   @relation(fields: [organizationId], references: [id])
  templates      Template[]
}

model Organization {
  id                     Int          @id @default(autoincrement())
  name                   String       @db.VarChar
  createdAt              DateTime     @default(now()) @db.Timestamptz()
  updatedAt              DateTime     @default(now()) @updatedAt @db.Timestamptz()
  deletedAt              DateTime?    @db.Timestamptz()
  stripeSubscriptionId   String?      @unique @db.VarChar
  stripeCustomerId       String?      @unique @db.VarChar
  stripePriceId          String?
  stripeCurrentPeriodEnd DateTime?
  memberships            Membership[]
}

enum MembershipRole {
  OWNER
  ADMIN
  USER
}

enum GlobalRole {
  SUPERADMIN
  CUSTOMER
}

enum BlockType {
  TEXT
  H1
  H2
  H3
  DIVIDER
  QUOTE
  IMAGE
  CODE
}
